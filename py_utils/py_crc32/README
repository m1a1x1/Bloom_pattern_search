Здесь собраны необходимы функции для расчета CRC32.

Функции и их описание:
  1.  bits_in_poly.py 
        Для генерации verilog функции на сайте
        www.easics.com/webtools/crctool
        удобно знать какой бит в единице. Эта функция показывает какой
        бит в полиноме - единица. НО не забывыть в любом случае
        установить 32-ой бит!

  2.  crc32_mpeg.py 
        Считает crc32 от буквы "а" ( 97 ) с одним или несколькими
        полиномами. Применялось для сравнения verilog функции с
        питоновской.

  3.  hash_cnt_crc32.py
        Класс. При объявлении необходимо указать:
                                                  a) Cписок из 4-ех
                                                     полиномов ( на выходе
                                                     получить 10
                                                     хэш-функций по 12
                                                     бит );

                                                  б) Один полином,
                                                     ( на выходе 0 )

        После объявления сгенерируются таблицы для всех переданных
        полиномов. Далее можно вызвать функцию calc_hashes( ),
        передать в неё строчку, и функция вернет список из 10-ти
        хэшей.

        ВАЖНО!!!
        Все СRC будут считаться как crc32-mpeg, только с разными
        полиномами, crc32-mpeg значит следующее:
                                                  reflect_in = False
                                                  xor_in = 0xffffffff
                                                  reflect_out = False
                                                  xor_out = 0x0

  4.  pycrc.py 
        Библиотека crc для python. Дает возможность считать
        всевозможные crc. Все действия с crc в проэкте основынны на
        функиях из этой библиотеки.
